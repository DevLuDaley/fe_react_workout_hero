{"version":3,"sources":["actions/fetchRoutines.js","actions/deleteRoutine.js","components/RoutinesList.js","forms/NewRoutineForm.js","actions/addRoutine.js","containers/RoutinesPage.js","reducers/routinesReducer.js","forms/UpdateRoutineForm.js","actions/updateRoutine.js","components/Routine.js","containers/RoutinesContainer.js","components/HomePage.js","containers/MainContainer.js","App.js","reportWebVitals.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/reducer.js","index.js","store/configureStore.js"],"names":["fetchRoutines","dispatch","fetch","headers","then","resp","json","data","type","payload","deleteRoutine","routineData","console","log","deleteRoutineUrl","id","method","response","routineId","connect","props","handleDeleteRoutine","e","routines","targetId","target","replace","clickedRoutine","find","routine","map","className","style","listStyleType","to","routine_name","workouts","length","onClick","workout","workout_name","NewRoutineForm","state","handleChange","setState","name","value","handleSubmit","preventDefault","addRoutine","onSubmit","this","placeholder","onChange","Component","body","JSON","stringify","res","RoutinesPage","intialState","UpdateRoutineForm","updateRoutine","parseInt","window","location","href","includes","currentRoutine","routinesReducer","filter","Routine","match","params","workout_type","distance","duration","RoutinesContainer","exact","path","render","routerProps","rando","MainContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","logger","store","next","group","info","result","getState","groupEnd","rootReducer","combineReducers","newRoutine","concat","payloadId","updatedRoutine","selectedRoutine","filteredRoutines","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhancers","composeWithDevTools","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4a01ad1.chunk.js","sourcesContent":["export function fetchRoutines() {\n    // ! thunk allows us to use dispatch here\n    // ! bring in dispatch so that we can async if not the connect will handle synchronously\n    // fetch('https://be-hoop-drills.herokuapp.com/api/v1/routines'\n    return(dispatch) => { \n        fetch('http://localhost:3000/api/v1/routines', \n        // fetch('https://be-workout-hero.herokuapp.com/api/v1/routines', \n        // fetch('https://be-workout-hero2.herokuapp.com/api/v1/routines', \n        {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n        })\n        .then(resp => resp.json())\n        .then(data => dispatch({\n            type: 'FETCH_ROUTINES', payload: data\n        }))\n    }\n        \n// .then(jsonResponse =>\n//   console.log('App -> componentDidMount -> jsonResponse', jsonResponse))\n}\n\n// return action.payload\n// export fetchRoutines","export const deleteRoutine = (routineData) => {\n\n    console.log('🚀 ~ file: deleteRoutine.js ~ line 2 ~ deleteRoutine ~ routineData', routineData);\n\n    // const baseUrl = 'http://localhost:3000/api/v1/routines/'\n    const baseUrl = 'https://be-workout-hero2.herokuapp.com/api/v1/routines/'\n    const deleteRoutineUrl = (baseUrl + routineData.id)\n\n    return (dispatch) => {\n        fetch(deleteRoutineUrl, {\n                method: 'DELETE'\n    })\n        .then(response => response.json())\n        .then(routineId => dispatch({type: 'DELETE_ROUTINE', payload: routineId}))\n    }\n};\n\nexport default deleteRoutine;","import React, { Fragment } from 'react'\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nimport deleteRoutine from '../actions/deleteRoutine'\n\n\nconst RoutinesList = (props) =>  {\n  const handleDeleteRoutine = (e) => {\n    if (props.routines){\n      const targetId = e.target.id.replace(\"btn-delete-routine-\", \"\")\n\n      const clickedRoutine = props.routines.find(routine => routine.id == targetId)\n      \n      props.deleteRoutine(clickedRoutine)\n        }\n    }\n  return (\n    <Fragment>\n         {props.routines ?\n            props.routines.map(routine =>\n              <ul key={\"ul-key-\" + routine.id} className='routines-list all-routines' style={{listStyleType: 'none'}}>\n\n                    <li key={\"li-key-\" + routine.id}>\n                    {/* {console.log('🚀 ~ file: RoutinesList.js ~ line 25 ~ RoutinesList ~ routine.routine_name + \" \" + routine.id', routine.routine_name + \"-routine-number-\" + routine.id)} */}\n                      <div key={\"div-key-\" + routine.id} className='routine-name-btns-wrapper'>\n                            <Link key={\"routine_url-key-\" + routine.id} to={`/routines/${routine.id}`}>\n                        <h1 key={\"h1-\" + routine.id}className='routine-names'>\n                              {routine.routine_name}\n\n                                  {routine.workouts && routine.workouts.length != 0 ?\n                            <button key={\"delete-btn-\" + routine.id} className='btns-all'>\n                                  {routine.workouts.length }\n                           </button>\n                      : null}\n\n                          </h1>\n                        </Link>\n                                <button key={\"delete-routine-btn-key-\" + routine.id} onClick={handleDeleteRoutine} id={`btn-delete-routine-${routine.id}`} className='btn-delete-routine'>\n                            {/* <button onClick={deleteRoutine} id={routine.id} className='btn-delete-routine'> */}\n                                Delete Routine\n                            </button>\n                      </div>\n                      {\n                        routine.workouts ?\n                        <section key={\"workouts-section-key-\" + routine.id} id={`routine-${routine.routine_name} + \"\" + ${routine.id}-workouts`} className='all-routine-workouts'>\n                            {routine.workouts.map(workout =>\n                            <div key={\"section-div-key-\" + workout.id} className='routine-workout-names'>\n                                {workout.workout_name}\n\n                                <section key={\"nested-section-key-\" + workout.id} className='routine-workout-details'>\n                                </section>\n                            </div>\n                            )}\n                        </section>\n                      : null}\n                  </li>\n                            {/* <button onClick={handleDeleteroutine} id={`btn-delete-routine-${routine.id}`} className='btn-delete-routine'> */}\n                            {/* <button onClick={deleteroutine} id={routine.id} className='btn-delete-routine'> */}\n                                {/* Delete\n                            </button> */}\n            </ul>\n\n            ) : \"nothing\"\n            }\n    </Fragment>\n  )\n}\n// export default RoutinesList\nexport default connect(null, {deleteRoutine}) (RoutinesList);","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\n\nimport {addRoutine} from '../actions/addRoutine'\n// import RoutinesList from '../components/RoutinesList'\n\nclass NewRoutineForm extends Component {\n    state = {\n        routine_name:''\n    }\n\n    handleChange = (e) => {\n        // e.target.value\n        // console.log('NewRoutineForm -> e.target.value', e.target.value);\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log('🚀 ~ file: NewRoutineForm.js ~ line 20 ~ NewRoutineForm ~ e.target.routine_name', e.target.routine_name);\n        console.log('🚀 ~ file: NewRoutineForm.js ~ line 20 ~ NewRoutineForm ~ e.target.name', e.target.name);\n        console.log('🚀 ~ file: NewRoutineForm.js ~ line 20 ~ NewRoutineForm ~ e.target.value', e.target.value);\n        // console.log('NewRoutineForm -> e.target.image_url', e.target.image_url);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        // debugger\n        this.props.addRoutine(this.state)\n        // alert(`${[this.state.name]} created!`)\n        this.setState({ \n        name: ''\n    })\n    }\n\n// export default connect(mapStateToProps)(App);\n    render() {\n        return (\n        <Fragment>\n        {/* <RoutinesList/> */}\n            <form id='new-routine-form' onSubmit={this.handleSubmit}>\n\n                <label> Routine Name: </label>\n                <input type=\"text\" placeholder='enter routine name...' value={this.state.name} name=\"routine_name\" routine_name=\"blank\" onChange={this.handleChange}/>\n\n                <button type=\"submit\">Create Routine</button>\n            </form>\n            {/* <DrillsContainer/>       */}\n            {/* <Route exact path='/routines' render={(routerProps) => <RoutinesList {...routerProps} routines={this.props.routines}/>}/> */}\n            {/* <RoutinesList/> */}\n            {/* <RoutinesList props={this.props}/> */}\n        </Fragment>\n        );\n    }\n}\n\n\nexport default connect(null, {addRoutine})(NewRoutineForm);\n// ! doesn't need mapStateToProps\n// ! doesn't need access to prop\n//  ! doesn;t need to know what is currently in store...only responsible for adding new routine and updating\n\n// ! instead of mapDispatchToProps we're calling {addRutine} and use the connect component","export const addRoutine = (data) => {\n// debugger\n// ! return dispatch so that we have access to dispatch function, thanks to thunk.\n// ! thunk is allowing us to pass in dispatch to the thunk function that we have inside of our action creator\n\n    return(dispatch) => {\n// fetch('http://localhost:3000/api/v1/routines', {\nfetch('https://be-workout-hero2.herokuapp.com/api/v1/routines', {\n    headers: {\n        'Content-Type' : 'application/json',\n        'Accept' : 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(data)\n})\n.then(res => res.json())\n.then(routine => dispatch({\n    type: 'ADD_ROUTINE', \n    payload: routine\n}))\n    }\n};","import React, { Component } from 'react'\n// import fetchRoutines from '../actions/fetchRoutines'\nimport RoutinesList from '../components/RoutinesList';\nimport NewRoutineForm from '../forms/NewRoutineForm';\n// import OldRoutineForm from '../forms/OldRoutineForm';\n// import Routine from '../components/Routine';\n\n\nclass RoutinesPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n\n    //   componentDidMount(){\n    //     // this.props.fetchRoutines()\n    // }\n  render() { \n            return (\n            <>\n                {/* <OldRoutineForm routines={this.props.routines}/> */}\n                <NewRoutineForm routines={this.props.routines}/>\n                <RoutinesList routines={this.props.routines}/>\n                {/* <Routine/> */}\n            </>\n            );\n    }\n}\n \nexport default RoutinesPage;","// const intialState = {routines: [], routine: {}}\nconst intialState = []\n\nexport default function routinesReducer(state = intialState, action) {\n// console.log('🚀 ~ file: routinesReducer.js ~ line 4 ~ routinesReducer ~ action', action);\n// debugger;\n    switch (action.type) {\n        case 'FETCH_ROUTINES':        // debugger;\n            return {routines: action.payload}\n\n        case 'ADD_ROUTINE':\n            let newRoutine = action.payload\n            return {...state.routines, routines: state.routines.concat(newRoutine)}\n\n        case 'UPDATE_ROUTINE':\n            const payloadId = action.payload.id\n            const updatedRoutine = action.payload\n            const selectedRoutine = state.routines.filter(routine => \n                        routine.id == payloadId)\n                        \n                        console.log('🚀 ~~line 17 ~ ~ UPDATED-ROUTINE', updatedRoutine);\n                        console.log('🚀 ~~ line 16 ~ ~ PAYLOAD-ID', payloadId);\n                        console.log('🚀 ~~ line 20 ~ ~  state.routines.FILTER', state.routines.filter(routine => routine.id == payloadId))\n                        console.log('🚀 ~ file: routinesReducer.js ~ line 19 ~ routinesReducer ~ selectedRoutine', selectedRoutine);\n                        console.log('STATE', state);\n            return {\n                    routines: state.routines.map(routine => routine.id == payloadId ? action.payload : routine)\n                    // routines: state.routines.map(routine => routine.id == payloadId ? action.payload : routine)\n                    // routines: updatedRoutine\n                    // routines: state.routines,\n                    // routine: \n                    // updatedRoutine\n                    // ,\n                    // routine: state.routines.map(routine => routine.id == payloadId ? action.payload : routine)\n                    // routines: state.routines,\n                    // routine: updatedRoutine\n                    // routine: state.routines.filter(routine => \n                    //     routine.id == payloadId ? \n                    //     routine = updatedRoutine : null\n                        // ? routine = updatedRoutine : null \n                    // )\n            }\n                // return Object.assign({}, state, {routines: currentRoutines, routine: currentRoutine})\n        case 'DELETE_ROUTINE':\n            const filteredRoutines = state.routines.filter(routine => routine.id !== action.payload.routineId);\n            return {...state, routines: filteredRoutines}\n\n        // case 'ADD_ROUTINE_WORKOUT': \n            \n        //     let routineRecipes =  state.routines.map(routine => {\n        //         if (routine.id == action.payload.id) {\n        //             return action.payload\n        //             } else {\n        //                 return routine\n        //             }\n        //           }\n        //         )\n        //     return {...state, routines: routineRecipes}\n\n        default:\n            // return {...state}\n            return state\n    }\n\n}","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\n//import {Route, Switch, useLocation, withRouter} from 'react-router-dom'\n// import { createBrowserHistory } from \"history\";\nimport {updateRoutine} from '../actions/updateRoutine'\nimport {routinesReducer} from '../reducers/routinesReducer'\n\n\nclass UpdateRoutineForm extends Component {\n    constructor(props) {\n    super(props)\n    this.id = parseInt(window.location.href.includes('heroku')) ?\n    parseInt(window.location.href.replace(\"https://fe-workout-hero.herokuapp.com/routines/\", \"\"))\n       :\n       parseInt(window.location.href.replace(\"http://localhost:3003/routines/\", \"\"))\n       this.routine = this.props.routines.find(routine => routine.id == this.id)\n       // this.routines = this.props.routines\n       // this.id = parseInt(window.location.href.replace(\"http://localhost:3001/routines/\", \"\"))\n       // this.id = parseInt(window.location.href.replace(\"http://localhost:3003/routines/\", \"\"))\n\n    this.state = {\n        id: this.id,\n        routine_name: \"\"\n        // routine:this.routine\n        // id: parseInt(window.location.href.replace(\"http://localhost:3001/routines/\", \"\")),\n        // id: this.props.routineToUpdate.id,\n        // routine_name: this.props.routineToUpdate.routine_name,\n        // routine_name: this.routine.routine_name\n        }\n        // this.loadRoutineInfo = this.loadRoutineInfo.bind(this)\n    }\n\n        componentDidMount(){\n            // this.loadRoutineInfo()\n        }\n\n        loadRoutineInfo(){\n        // console.log('HARLEM SON1')\n        if (this.props.routines){\n            // var routineId = parseInt(window.location.href.replace(\"http://localhost:3001/routines/\", \"\"))\n            // ! this.routine = this.props.routines.find(routine => routine.id == this.id);\n\n        }\n        }\n\n    // this.id = parseInt(window.location.href.replace(\"http://localhost:3001/routines/\", \"\"))\n    // this.routinesList = this.props.routines\n    // this.routine = [this.props.routines].find(routine => routine.id == this.id)\n\n        handleChange = (e) => {\n            this.setState({\n                [e.target.name]: e.target.value\n            })\n        }\n\n        handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.updateRoutine(this.state)\n        this.setState({ routine_name: '' })\n        }\n\n        render() {\n        return (\n            <Fragment>\n                {/* {console.log(\"THIS.PROPS\", this.props)} */}\n                {/* { console.log('🚀 ~ file: UpdateRoutineForm.js ~ line 136 ~ UpdateRoutineForm ~ render ~ this.routine.routine_name', this.routine.routine_name)} */}\n\n                {/* {console.log('🚀 ~ file: UpdateRoutineForm.js ~ line 94 ~ UpdateRoutineForm ~ render ~ this.routine.routine_name', this.routine.routine_name)} */}\n\n                {/* {console.log('🚀 ~ file: UpdateRoutineForm.js ~ line 94 ~ UpdateRoutineForm ~ render ~ this.state.routine_name', this.state.routine_name)} */}\n            {\n                this.props.routines ?\n                    <section>\n                        {/* {this.routineInfo} */}\n                        <form onSubmit={this.handleSubmit} id='update-routine-form'>\n                            <label> Routine Name: </label>\n                            <input type=\"text\" placeholder={this.state.routine_name == this.props.routine.routine_name ? this.routine.routine_name : this.props.routine.routine_name} value={this.state.routine_name} name=\"routine_name\" onChange={this.handleChange}/>\n\n                            <button type=\"submit\">Update Routine </button>\n                        </form>\n                    </section>\n                    :\n                    <p>NOTHING TO SEE HERE</p>\n\n                }\n\n        </Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n  const routineId = parseInt(window.location.href.replace(\"http://localhost:3003/routines/\", \"\"))\n  const currentRoutine = state.routinesReducer.routines.filter(routine => routine.id == routineId)\n\n  return { routines: state.routinesReducer.routines,\n           routine: currentRoutine[0]\n }\n}\n\nexport default connect(mapStateToProps, {updateRoutine})(UpdateRoutineForm);","export const updateRoutine = (data) => {\nconsole.log('updateRoutine -> data', data);\n// console.log('updateRoutine -> data.id', data.id);\n// debugger\n// ! return dispatch so that we have access to dispatch function, thanks to thunk.\n// ! thunk is allowing us to pass in dispatch to the thunk function that we have inside of our action creator\n// ${id}\n    return(dispatch) => {\n// fetch(`http://localhost:3000/api/v1/routines/${data.id}`, {\nfetch(`https://be-workout-hero2.herokuapp.com/api/v1/routines/${data.id}`, {\n    headers: {\n        'Content-Type' : 'application/json',\n        'Accept' : 'application/json'\n    },\n    method: 'PATCH',\n    body: JSON.stringify(data)\n})\n.then(resp => resp.json())\n\n// .then(routine => console.log('🚀 ~ file: updateRoutine.js ~ line 22 ~ return ~ routine', routine))\n.then(routine => dispatch({\n    type: 'UPDATE_ROUTINE',\n    payload: routine\n}))\n// debugger\n    }\n};\n// create index\n// read index\n// update index/id\n// delete index/id","import React, { Fragment, useState, useEffect } from 'react';\n// import {Redirect} from 'react-router-dom'\nimport { Switch, Link } from 'react-router-dom'\n\n// import { connect } from 'react-redux'\nimport UpdateRoutineForm from '../forms/UpdateRoutineForm'\n\nconst Routine = (props) => {\n\n    return(\n    <Fragment>\n                    <Switch>\n                   <Link to={'/routines'}> <button> Return to Routines </button> </Link>\n                    </Switch>\n    {\n        props.routines ?\n        <section>\n        Current Routine Info:\n        {\n            props.routines.map(routine => \n                routine.id == props.match.params.id ? \n        <section key={routine.id}>\n            <br></br>\n                name: {routine.routine_name} \n            <br></br>\n            {/* id: {routine.id} */}\n            <br></br>\n            <br></br>\n                <h3 key={routine.id}>Recipes:</h3> { \n                routine.workouts.length > 0 ?\n\n                    routine.workouts.map(workout =>\n                        <div key={workout.id}>\n                            {/* id: {workout.id}\n                            <br></br> */}\n                            name: {workout.workout_name}\n                            <br></br>\n                            category: {workout.workout_type}\n                            <br></br>\n                            distance: {workout.distance ? workout.distance + \" miles\" : \"please enter distance\"} \n                            <br></br>\n                            workout.duration: {workout.duration ? workout.duration + \" minutes\" : \"please enter duration\"}\n                            <br></br>\n                            <br></br>\n                        </div>\n                    ) : <p> No Recipes Created Yet </p>\n                    }\n                </section>\n                : null )\n        }\n        \n        </section>\n        :\n        'no routine here bub'\n    }\n    {/* <p>{filtered.name}</p> */}\n    {/* {props.routines ?\n    <UpdateRoutineForm routines={props.routines} \n            routineToUpdate={props.routines.find(routine => \n         routine.id == props.match.params.id)}\n    />\n    //routineToUpdate={props.routines.find(routine => \n    //     routine.id == props.match.params.id)}\n    \n\n    : null } */}\n        </Fragment>\n    )\n}\n    // const mapStateToProps = (state, ownProps) => {\n    //     const { routines1 } = state\n    //     const { routines } = ownProps\n    //     return {\n    //         routinesArr: routines\n    //     }\n    // }\n    // export default connect(mapStateToProps)(Routine);\n    export default Routine;","import React, { Component, Fragment } from 'react';\nimport {connect} from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\n\nimport {fetchRoutines} from '../actions/fetchRoutines'\nimport RoutinesPage from './RoutinesPage';\nimport Routine from '../components/Routine'\n// import UpdateRoutinePage from '../components/UpdateRoutinePage'\n// import UpdateRoutineForm from '../forms/UpdateRoutineForm'\nimport HomePage from '../components/HomePage'\n// import Home from '../components/Home'\n\n// import {fetchRoutines} from '../actions/fetchRoutines'\n// import NewRoutineForm from '../components/NewRoutineForm'\n// import RoutinesList from '../components/RoutinesList'\n// import NewRoutinesContainer from '../containers/NewRoutinesContainer'\n\n\nclass RoutinesContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.fetchRoutines = fetchRoutines\n        this.state = {routines: []}\n    }\n    componentDidMount(){\n        // console.log('THIS.PROPS 1', this.props)\n        // this.fetchRoutines()\n        this.props.fetchRoutines()\n    }\n    render() {\n        return (\n            <Fragment>\n            {/* <p> Routines Container</p> */}\n            {/* <Router> */}\n            <Switch>\n            <Route exact path='/' render={(routerProps) => <RoutinesPage {...routerProps} routines={this.props.routines} rando=\"words\"/>}/>\n\n            <Route path='/routines/:id' render={(routerProps) => <Routine {...routerProps} routines={this.props.routines}\n             />}/>\n\n            {/* <Route exact path='/' component={HomePage}/> */}\n\n            <Route exact path='/routines' render={(routerProps) => <RoutinesPage {...routerProps} routines={this.props.routines} rando=\"words\"/>}/>\n\n            {/* <Route exact path='/routines/new' render={(routerProps) => <NewRoutinesContainer {...routerProps} routines={this.props.routines}/>}/> */}\n\n\n            {/* <Route exact path='/routiney' render={(routerProps) => <UpdateRoutineForm {...routerProps} routines={this.props.routines}\n             />}/> */}\n\n            {/* <Route exact path='/routines/:id/edit' render={(routerProps) => <UpdateRoutinePage {...routerProps} routines={this.props.routines}\n             />}/> */}\n\n            </Switch>\n            {/* </Router> */}\n        </Fragment> );\n\n\n            // console.log('RoutinesContainer -> render -> this.props.routines', this.props.routines);\n    }\n}\n \n//! redux store\nconst mapStateToProps = state => {\n    return(\n        {\n            routines: state.routinesReducer.routines,\n            // recipes: state.recipesReducer.recipes\n        }\n    )\n}\n \nexport default connect(mapStateToProps, {fetchRoutines})(RoutinesContainer);","import React, { Component } from 'react'\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return (\n            <p>they call me HomePage</p>\n          );\n    }\n}\n \nexport default HomePage;","import React, { Component, Fragment } from 'react';\nimport {Route, Switch} from 'react-router-dom'\n// import {connect} from 'react-redux'\n// import './MainContainer.css';\n// import {fetchRoutines} from '../actions/fetchRoutines'\n// import RoutinesPage from './RoutinesPage';\n// import Routine from '../components/Routine'\n// import UpdateRoutinePage from '../components/UpdateRoutinePage'\n// import Navbar from  '../components/Navbar'\n// import Footer from '../components/Footer'\n// import HomePage from '../components/HomePage'\nimport RoutinesContainer from './RoutinesContainer'\n// import RecipesContainer from './RecipesContainer'\n// import Home from '../components/Home'\n// import {fetchRoutines} from '../actions/fetchRoutines'\n// import NewRoutineForm from '../components/NewRoutineForm'\n// import RoutinesList from '../components/RoutinesList'\n// import NewMainContainer from '../containers/NewMainContainer'\n\nclass MainContainer extends Component {\n    // constructor(props) {\n    //     super(props);\n    constructor(props) {\n        super(props);\n        // this.fetchRoutines = fetchRoutines\n        console.log('🚀 ~ file: MainContainer.js ~ line 24 ~ MainContainer ~ CONSTRUCTOR ~ props', this.props);\n        // this.state = {routines: []}\n    }\n    // componentDidMount(){\n    //     // this.props.fetchRoutines()\n    //     // console.log('THIS.PROPS 1', this.props)\n    //     // console.log('THIS.STATE', this.state)\n    //     // this.fetchRoutines()\n    // }\n    render() { \n        return (\n            <Fragment>\n                {/* <Navbar/> */}\n                    {/* <Switch>\n                        <Route exact path='/' component={HomePage}/>\n                    </Switch> */}\n                <RoutinesContainer routines={this.props.routines}/>\n                {/* <Footer id=\"footer\"/> */}\n            </Fragment> );\n            \n            \n            // console.log('MainContainer -> render -> this.props.routines', this.props.routines);\n    }\n}\n \n//! redux store\n// const mapStateToProps = state => {\n//     console.log('state.routines', state.routines);\n//     return(\n//         {\n//             routines: state.routines\n//         }\n//     )\n// }\n\n \nexport default MainContainer;\n// export default connect(null)(MainContainer);\n// export default connect(mapStateToProps, {fetchRoutines})(MainContainer);\n","import React, {Fragment} from 'react';\nimport './App.css';\nimport MainContainer from './containers/MainContainer'\n\nfunction App() {\n  return (\n    <Fragment>\n    <div className=\"App container\">\n      <header className=\"App-header\">\n      </header>\n      <MainContainer id=\"main-container\"/>\n    </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer\n","const logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\n\nexport default logger","import { combineReducers } from 'redux';\nimport routinesReducer from './routinesReducer'\n\nconst rootReducer = combineReducers({\n    routinesReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n  <Router><React.StrictMode>\n  <App/>\n  </React.StrictMode></Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// import thunk from 'redux-thunk'\n\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n// import mealsReducer from './mealsReducer'\nimport monitorReducersEnhancer from '../enhancers/monitorReducer'\nimport loggerMiddleware from '../middleware/logger'\nimport rootReducer from '../reducers/reducer'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n    //   const middlewares = [loggerMiddleware, thunk]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n//   const composedEnhancers = compose(...enhancers)\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('../reducers/reducer', () => store.replaceReducer(rootReducer))\n  }\n\n  return store\n}"],"sourceRoot":""}